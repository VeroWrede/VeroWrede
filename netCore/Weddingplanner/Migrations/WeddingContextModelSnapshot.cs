// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;
using Weddingplanner.Models;

namespace Weddingplanner.Migrations
{
    [DbContext(typeof(WeddingContext))]
    partial class WeddingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Weddingplanner.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PersonId");

                    b.Property<int>("WeddingId");

                    b.HasKey("AttendanceId");

                    b.HasIndex("PersonId");

                    b.HasIndex("WeddingId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Weddingplanner.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatetAt");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Weddingplanner.Models.Wedding", b =>
                {
                    b.Property<int>("WeddingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("UpdatetAt");

                    b.Property<int>("WeddeePersonId");

                    b.Property<int>("WedderPersonId");

                    b.HasKey("WeddingId");

                    b.HasIndex("WeddeePersonId");

                    b.HasIndex("WedderPersonId");

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("Weddingplanner.Models.Attendance", b =>
                {
                    b.HasOne("Weddingplanner.Models.Person", "Person")
                        .WithMany("Attendances")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Weddingplanner.Models.Wedding", "Wedding")
                        .WithMany("Attendees")
                        .HasForeignKey("WeddingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weddingplanner.Models.Wedding", b =>
                {
                    b.HasOne("Weddingplanner.Models.Person", "Weddee")
                        .WithMany()
                        .HasForeignKey("WeddeePersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Weddingplanner.Models.Person", "Wedder")
                        .WithMany()
                        .HasForeignKey("WedderPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
